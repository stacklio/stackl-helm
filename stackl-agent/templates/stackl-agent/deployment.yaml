apiVersion: apps/v1
kind: Deployment
metadata:
  name:  "{{ template "stackl.agent" . }}"
  labels:
    {{ include "stackl.labels" . | nindent 4 }}
    component: agent
spec:
  replicas: {{ .Values.stacklAgent.replicas }}
  selector:
    matchLabels:
      {{- include "stackl.selectorLabels" . | nindent 6 }}
      component: agent
  template:
    metadata:
      labels:
        {{- include "stackl.selectorLabels" . | nindent 8 }}
        component: agent
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ template "stackl.agent" . }}
      containers:
        - name: stackl-agent
          image: "{{ .Values.stacklAgent.image }}"
          resources:
            requests:
              memory: 64Mi
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: "STACKL_HOST"
              value: "{{ .Values.stacklAgent.stacklHost }}"
            - name: STACKL_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: SERVICE_ACCOUNT
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
            - name: "PYTHONUNBUFFERED"
              value: "TRUE"
            - name: "SECRET_HANDLER"
              value: "{{ .Values.stacklAgent.secretHandler.type }}"
            - name: "AGENT_TYPE"
              value: "kubernetes"
            - name: "AGENT_NAME"
              value: "{{ .Values.stacklAgent.agentName }}"
            {{- with .Values.stacklAgent.redisPassword }}
            - name: "REDIS_PASSWORD"
              value: "{{ . }}"
            {{- end }}
            - name: "REDIS_HOST"
              value: "{{ .Values.stacklAgent.redisHost }}"
            - name: "REDIS_PORT"
              value: "{{ .Values.stacklAgent.redisPort }}"
            - name: "STACKL_CLI_IMAGE"
              value: "{{ .Values.stacklAgent.stacklCliImage }}"
            {{- if eq .Values.stacklAgent.secretHandler.type "vault" }}
            {{- with .Values.stacklAgent.secretHandler.vault.vaultAddr }}
            - name: "VAULT_ADDR"
              value: "{{ . }}"
            {{- end }}
            {{- with .Values.stacklAgent.secretHandler.vault.vaultRole }}
            - name: "VAULT_ROLE"
              value: "{{ . }}"
            {{- end }}
            {{- with .Values.stacklAgent.secretHandler.vault.vaultMountPoint }}
            - name: "VAULT_MOUNT_POINT"
              value: "{{ . }}"
            {{- end }}
            {{- end }}
            {{- if eq .Values.stacklAgent.secretHandler.type "conjur" }}
            {{- with .Values.stacklAgent.secretHandler.conjur.conjurVerify }}
            - name: CONJUR_VERIFY
              value: "{{ . }}"
            {{- end }}
            {{- with .Values.stacklAgent.secretHandler.conjur.authenticatorClientContainerName }}
            - name: AUTHENTICATOR_CLIENT_CONTAINER_NAME
              value: "{{ . }}"
            {{- end }}
            {{- with .Values.stacklAgent.secretHandler.conjur.conjurApplianceUrl }}
            - name: CONJUR_APPLIANCE_URL
              value: "{{ . }}"
            {{- end }}
            {{- with .Values.stacklAgent.secretHandler.conjur.conjurAccount }}
            - name: CONJUR_ACCOUNT
              value: "{{ . }}"
            {{- end }}
            {{- with .Values.stacklAgent.secretHandler.conjur.conjurAuthnTokenFile }}
            - name: CONJUR_AUTHN_TOKEN_FILE
              value: "{{ . }}"
            {{- end }}
            {{- with .Values.stacklAgent.secretHandler.conjur.conjurAuthnUrl }}
            - name: CONJUR_AUTHN_URL
              value: "{{ . }}"
            {{- end }}
            {{- with .Values.stacklAgent.secretHandler.conjur.conjurAuthnLogin }}
            - name: CONJUR_AUTHN_LOGIN
              value: "{{ . }}"
            {{- end }}
            {{- with .Values.stacklAgent.secretHandler.conjur.conjurSslConfigMap }}
            - name: CONJUR_SSL_CONFIG_MAP
              value: "{{ . }}"
            {{- end }}
            {{- with .Values.stacklAgent.secretHandler.conjur.conjurSslConfigMapKey }}
            - name: CONJUR_SSL_CONFIG_MAP_KEY
              value: "{{ . }}"
            {{- end }}
            {{- end }}