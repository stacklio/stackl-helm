apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ template "stackl.core" . }}"
  labels:
    {{- include "stackl.labels" . | nindent 4 }}
    component: core
spec:
  replicas: {{ .Values.stacklCore.replicas }}
  selector:
    matchLabels:
      {{- include "stackl.selectorLabels" . | nindent 6 }}
      component: core
  template:
    metadata:
      labels:
        {{- include "stackl.selectorLabels" . | nindent 8 }}
        component: core
    spec:
    {{- with .Values.imagePullSecrets }}
    imagePullSecrets:
      {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
        - name: stackl-core
          image: "{{ .Values.stacklCore.image }}"
          {{- if eq .Values.mode "dev" }}
          args:
            - /start-reload.sh
          {{- end }}
          resources:
            requests:
              memory: 256Mi
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
            - name: "STACKL_STORE"
              value: "{{ .Values.datastore.type }}"
            {{- if eq .Values.datastore.type "LFS" }}
            - name: "STACKL_DATASTORE_PATH"
              value: "{{ .Values.datastore.path }}"
            {{- end }}
            - name: "LOGLEVEL"
              value: "DEBUG"
            - name: "STACKL_REDIS_HOST"
              value: "{{ template "stackl.redis" . }}"
            - name: "STACKL_REDIS_PORT"
              value: "6379"
            - name: "STACKL_OPA_HOST"
              value: "http://{{ template "stackl.opa" . }}:8181"
            - name: "WEB_CONCURRENCY"
              value: "1"
            - name: "PYTHONUNBUFFERED"
              value: "TRUE"
          {{- if eq .Values.mode "prod"}}
          livenessProbe:
            httpGet:
              path: /docs
              port: http
          readinessProbe:
            httpGet:
              path: /docs
              port: http
          {{ end }}